/ {
    model = "nice_nano_v2";
     compatible = "knockoff,nice_nano_v2";
 
     chosen {
         zephyr,code-partition = &code_partition;
         zephyr,sram = &sram0;
         zephyr,flash = &flash0;
         zephyr,console = &cdc_acm_uart0;
         zephyr,shell-uart = &cdc_acm_uart0;
     };
 
     leds {
         compatible = "gpio-leds";
         red_led: led_0 {
             gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
         };
     };

    pro_micro: connector {
        compatible = "arduino-pro-micro";
        #gpio-cells = <2>;
        gpio-map-mask = <0xffffffff 0xffffffc0>;
        gpio-map-pass-thru = <0 0x3f>;
        gpio-map
            = <0 0 &gpio0 8 0>      /* D0 */
            , <1 0 &gpio0 6 0>      /* D1 */
            , <2 0 &gpio0 17 0>     /* D2 */
            , <3 0 &gpio0 20 0>     /* D3 */
            , <4 0 &gpio0 22 0>     /* D4/A6 */
            , <5 0 &gpio0 24 0>     /* D5 */
            , <6 0 &gpio1 0 0>      /* D6/A7 */
            , <7 0 &gpio0 11 0>     /* D7 */
            , <8 0 &gpio1 4 0>      /* D8/A8 */
            , <9 0 &gpio1 6 0>      /* D9/A9 */
            , <10 0 &gpio0 9 0>     /* D10/A10 */
            , <16 0 &gpio0 10 0>    /* D16 */
            , <14 0 &gpio1 11 0>    /* D14 */
            , <15 0 &gpio1 13 0>    /* D15 */
            , <18 0 &gpio1 15 0>    /* D18/A0 */
            , <19 0 &gpio0 2 0>     /* D19/A1 */
            , <20 0 &gpio0 29 0>    /* D20/A2 */
            , <21 0 &gpio0 31 0>    /* D21/A3 */
            ;
    };

    pro_micro_a: connector_a {
        compatible = "arduino-pro-micro";
        #gpio-cells = <2>;
        gpio-map-mask = <0xffffffff 0xffffffc0>;
        gpio-map-pass-thru = <0 0x3f>;
        gpio-map
            = <0 0 &gpio1 15 0> /* D18/A0 */
            , <1 0 &gpio0 2 0>  /* D19/A1 */
            , <2 0 &gpio0 29 0> /* D20/A2 */
            , <3 0 &gpio0 31 0> /* D21/A3 */
            , <6 0 &gpio0 22 0> /* D4/A6 */
            , <7 0 &gpio1 0 0>  /* D6/A7 */
            , <8 0 &gpio1 4 0>  /* D8/A8 */
            , <9 0 &gpio1 6 0>  /* D9/A9 */
            , <10 0 &gpio0 9 0> /* D10/A10 */
            ;
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
};

&spi1 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
};

&uart0 {
    status = "okay";
    compatible = "nordic,nrf-uarte";
    current-speed = <115200>;
    pinctrl-0 = <&uart0_default>;
    pinctrl-1 = <&uart0_sleep>;
    pinctrl-names = "default", "sleep";
};

zephyr_udc0: &usbd {
    status = "okay";
};


&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * The flash starting at 0x000ec000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@ec000 {
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            reg = <0x000f4000 0x0000c000>;
        };
    };
};

zephyr_udc0: &usbd {
   compatible = "nordic,nrf-usbd";
   status = "okay";
   cdc_acm_uart0: cdc_acm_uart0 {
       compatible = "zephyr,cdc-acm-uart";
       label = "CDC_ACM_0";
   };
};

&pinctrl {
    uart0_default: uart0_default {
        group1 {
            psels = <NRF_PSEL(UART_RX, 0, 8)>;
            bias-pull-up;
        };
        group2 {
            psels = <NRF_PSEL(UART_TX, 0, 6)>;
        };
    };

    uart0_sleep: uart0_sleep {
        group1 {
            psels = <NRF_PSEL(UART_RX, 0, 8)>,
                <NRF_PSEL(UART_TX, 0, 6)>;
            low-power-enable;
        };
    };

    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,
                <NRF_PSEL(TWIM_SCL, 0, 20)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,
                <NRF_PSEL(TWIM_SCL, 0, 20)>;
            low-power-enable;
        };
    };

    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 1, 11)>;
        };
    };

    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 1, 11)>;
            low-power-enable;
        };
    };
};


pro_micro_d: &pro_micro {};
pro_micro_i2c: &i2c0 {};
pro_micro_spi: &spi1 {};
pro_micro_serial: &uart0 {};